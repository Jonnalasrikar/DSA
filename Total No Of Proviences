import java.util.*;
class TotalNoOfProvinces {
    public static void main(String[] args) {
        int edges[][]={{1,2},{2,3},{4,5},{5,6},{7,8}};
        int n=8;
        ArrayList<ArrayList<Integer>> graph=creategraph(edges,n);
        System.out.println(noofprovinces(graph,n));
    }
    public static int noofprovinces(ArrayList<ArrayList<Integer>> graph,int n)
    {
        int visited[]=new int[n+1];
        int count=0;
        for(int i=1;i<=n;i++)
        {
            if(visited[i]==0)
            {
                dfs(graph,i,visited);
                count++;
            }
        }
        return count;
    }
    public static void dfs(ArrayList<ArrayList<Integer>> graph,int i,int visited[])
    {
        visited[i]=1;
        ArrayList<Integer> nbrs=graph.get(i);
        for(int nbr:nbrs)
        {
            if(visited[nbr]==0)
            {
                visited[nbr]=1;
                dfs(graph,nbr,visited);
            }
        }
    }
    public static ArrayList<ArrayList<Integer>> creategraph(int edges[][],int n)
    {
        ArrayList<ArrayList<Integer>> graph=new ArrayList<ArrayList<Integer>>();
        for(int i=0;i<=n;i++)
        {
            graph.add(new ArrayList<>());
        }
        for(int row[]:edges)
        {
            int src=row[0];
            int dest=row[1];
            graph.get(src).add(dest);
            graph.get(dest).add(src);
        }
        return graph;
    }
}
