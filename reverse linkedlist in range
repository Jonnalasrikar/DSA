import java.util.*;

class reverselinkedlistinrange {
  static class Node {
    int data;
    Node next;

    Node(int data) {
      this.data = data;
      this.next = null;
    }
  }

  public static Node createlist(int[] arr) {
    Node head = null;
    Node tail = null;
    for (int i = 0; i < arr.length; i++) {
      Node newnode = new Node(arr[i]);
      if (head == null) {
        head = newnode;
        tail = newnode;
      } else {
        tail.next = newnode;
        tail = newnode;
      }
    }
    return head;
  }

  public static void printlist(Node head) {
    Node temp = head;
    while (temp != null) {
      System.out.print(temp.data + " ");
      temp = temp.next;
    }
  }

  public static Node reverselist(Node head, int i, int j) {
    Node temp = head;
    int count = j - 1 + 1;
    for (int k = 1; k <= i - 1; k++) {
      temp = temp.next;
    }
    Stack<Integer> st = new Stack<>();
    Node t1 = temp;
    for (int k = 0; k < count; k++) {
      st.push(temp.data);
      temp = temp.next;
    }
    while (st.size() > 0) {
      t1.data = st.pop();
      t1 = t1.next;
    }
    return head;

  }

  public static void main(String[] args) {
    int a[] = { 10, 20, 30, 40, 50, 60, 70, 80, 90, 100, 110, 120, 130, 140 };
    Node head = createlist(a);
    // printlist(head);
    Node head1 = reverselist(head, 2, 6);
    printlist(head1);

  }
}
